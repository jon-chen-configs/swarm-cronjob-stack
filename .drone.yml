kind: pipeline
type: docker
name: default

steps:
  - name: clone environment variables repo
    image: alpine/git
    environment:
      CLONE_PATH: swarm-envs
    commands:
      - git clone https://github.com/jon-chen-configs/swarm-env-config.git $CLONE_PATH

  - name: validate config
    image: tiangolo/docker-with-compose
    environment:
      COMPOSE_ENV: swarm-envs/swarm.env
      COMPOSE_FILE: swarm-cronjob-swarm.yml
    commands:
      - docker-compose --env-file $COMPOSE_ENV --file $COMPOSE_FILE config > .compose.yml

  - name: auto-promote
    image: drone/cli:1.5-alpine
    environment:
      DRONE_SERVER: http://drone-server
      DRONE_TOKEN:
        from_secret: drone_token
    commands:
      - drone build promote $DRONE_REPO $DRONE_BUILD_NUMBER production
    when:
      event: 
        exclude: [promote]

  - name: deploy
    image: automagistre/docker:stable
    environment:
      STACK_NAME: swarm-cronjob-swarm
      COMPOSE_FILE: swarm-cronjob-swarm.yml
    volumes:
      - name: docker.sock
        path: /var/run/docker.sock
    commands:
      - docker stack deploy --prune --with-registry-auth --compose-file .compose.yml $STACK_NAME
    when:
      event: [promote]

volumes:
  - name: docker.sock
    host:
      path: /var/run/docker.sock

trigger:
  event: [push, custom, promote]
  branch: [master]
  repo:
    include:
      - jon-chen-configs/swarm-env-config
      - jon-chen-configs/swarm-cronjob-stack
